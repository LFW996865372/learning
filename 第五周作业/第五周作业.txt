第五周第一次作业 10月13日
1、使用processOn绘制Spring系统框架图。
见系统框架图的节点
https://www.processon.com/mindmap/5f8bffe5e401fd06fd90f723

2、理解SpringIOC容器的核心作用，生成类关系图
核心作用：
	1，IOC是一种设计模式，用来降低代码间的耦合性。	
	2，控制反转(其中最常见的实现方式叫做依赖注入（DependencyInjection，DI），Spring中控制反转也被直接称作依赖注入，
	   其基本概念是：不创建对象，但是描述创建它们的方式。在代码中不直接与对象和服务连接，但在配置文件中描述哪一个组件需要哪一项服务。
	3，Spring 提供了IOC容器通过配置文件或者注解的方式来管理对象之间的依赖关系。
    用大白话的讲，IOC是将对象的创建的控制权，反转给到了Spring框架。而IOC容器负责Spring中单例与原型两种对象模型的创建。

类关系图：
见同级目录的图《BeanFactory.png》与《ApplicationContext.png》



第五周第二次作业 10月15日
1、理解SpringIOC、DI、MVC的基本执行原理
IOC:
IOC是将对象的创建的控制权，反转给到了Spring框架。
业务代码不再new对象，而是通过配置文件或者主键的方式表达对象间的依赖关系，将new对象的工作交由Spring框架。

DI:
DI，依赖注入，是Spring实现控制反转的实现方式。Spring启动过程，会将A依赖的B、C对象，主动注入（Spring将B的实例注入到A的B、C属性上）。

MVC:
Spring MVC框架核心是：请求驱动；其所有设计都围绕着一个DispatcherServlet来展开（DispatcherServlet中的内容，主要就是在做IOC与DI），它负责把所有请求分发到控制器。
SpringMVC流程：
01、客户端发送出请求到前端控制器DispatcherServlet。
02、DispatcherServlet收到请求调用HandlerMapping（处理器映射器）。
03、HandlerMapping找到具体的处理器Handler(可查找xml配置或注解配置)。
04、DispatcherServlet调用HandlerAdapter（处理器适配器）。
05、HandlerAdapter经过适配调用具体的处理器（Handler/Controller）。
06、Controller执行完成返回ModelAndView对象。
07、HandlerAdapter将Controller执行结果ModelAndView返回给DispatcherServlet。
08、DispatcherServlet将ModelAndView传给ViewReslover（视图解析器）。
09、ViewReslover解析后返回具体View（视图）。
10、DispatcherServlet根据View进行渲染视图（即将模型数据填充至视图中）。
11、DispatcherServlet响应客户端。

SpringMVC是Spring的一个子模块，而SpringMVC中使用到了的@RequestMapping @Controller @Autowired @Service都是基于IOC容器、DI实现的。


2、自己手写一个Mini版本的SpringMVC
https://github.com/LFW996865372/learning/tree/master/gupaoedu-vip-spring-1.0